name: Frontend Workflow

on:
  push:
    branches: 
      - CI-CD-P10
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  Frontend:
    name: Frontend Test and Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Angular CLI globally
        run: npm install -g @angular/cli

      - name: NPM clean install
        run: npm ci

      - name: Build the project
        run: npm run build

      - name: Unit tests
        run: ng test --browsers ChromeHeadless --watch=false

      - name: Coverage tests
        run: ng test --code-coverage --browsers ChromeHeadless --watch=false

      - name: Verify Coverage Report
        run: ls -R coverage/  # Vérifie que le rapport de couverture est bien généré

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: front/coverage/bobapp/  

  SonarCloudAnalyseFront:
    name: SonarCloud Analyze Frontend
    runs-on: ubuntu-latest
    needs: Frontend

    defaults:
      run:
        working-directory: front

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Install Dependencies
        run: npm ci

      - name: Build Angular Project
        run: npm run build

      - name: Run Tests and Generate Code Coverage Report
        run: ng test --no-watch --no-progress --browsers=ChromeHeadless --code-coverage

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: front-coverage-report
          path: front/coverage

      - name: SonarCloud Scan
        working-directory: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx sonar-scanner \
          -Dsonar.projectKey=mydmoov_sonarcloud-p10-front \
          -Dsonar.sources=. \
          -Dsonar.projectName=OCP10-front-sonar \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=wolfsilver0509 \
          -Dsonar.token=${{ secrets.SONAR_TOKEN_FRONT }} \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  DockerLogAndBuild:
    runs-on: ubuntu-latest
    needs: SonarCloudAnalyseFront
    defaults:
      run:
        working-directory: ${{ github.workspace }}/front

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t bobapp-front .
          docker tag bobapp-front ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
