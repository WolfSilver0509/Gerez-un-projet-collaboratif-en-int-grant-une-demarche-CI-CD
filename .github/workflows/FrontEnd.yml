name: Frontend Workflow

on:
  push:
    branches: 
      - CI-CD-P10
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  Frontend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: front

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use node.js ${{matrix.node-version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}

      - name: Install dependencies
        run: npm install

      - name: Run the tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Upload test coverage report
        uses: actions/upload-artifact@v4
        with:
          name: karma-report
          path: front/coverage/bobapp

  SonarCloud-Frontend:
    name: Analyse avec SonarCloud (Frontend)
    runs-on: ubuntu-latest
    needs: [Frontend-Test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache npm packages
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm

      - name: Install dependencies
        run: |
          cd front
          npm install

      - name: Run SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
        run: |
          cd front
          npx sonar-scanner \
          -Dsonar.projectKey=mydmoov_sonarcloud-p10-front \
          -Dsonar.organization=wolfsilver0509 \
          -X

  DockerLogAndBuild:
    runs-on: ubuntu-latest
    needs: SonarCloud-Frontend
    defaults:
      run:
        working-directory: ${{ github.workspace }}/front

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t bobapp-front .
          docker tag bobapp-front ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
