name: Frontend Workflow

on:
  push:
    branches: 
      - CI-CD-P10
  pull_request:
    branches: 
      - CI-CD-P10

jobs:
  Frontend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: front

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4 
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install 

      - name: Run tests and generate coverage
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage

      # Nouvelle étape pour lister les fichiers du dossier coverage et vérifier que lcov.info est bien généré
      - name: List coverage files
        run: ls -R coverage

      - name: Upload Karma coverage report
        uses: actions/upload-artifact@v4
        with:
          name: karma-coverage-report
          path: coverage  

  SonarCloudFrontEnd:
    runs-on: ubuntu-latest
    needs: Frontend

    defaults:
      run:
        working-directory: front

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      
      - name: Run tests and generate coverage
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
        
      - name: SonarCloud Scan Frontend
        env:
          SONAR_TOKEN: ${{  secrets.SONAR_TOKEN_FRONT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx sonarqube-scanner -Dsonar.projectKey=mydmoov_sonarcloud-p10-front
      
  DockerLogAndBuild:
    runs-on: ubuntu-latest
    needs: SonarCloudFrontEnd
    defaults:
      run:
        working-directory: ${{ github.workspace }}/front

    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t bobapp-front .
          docker tag bobapp-front ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
