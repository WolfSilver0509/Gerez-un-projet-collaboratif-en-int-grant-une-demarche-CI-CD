name: Frontend Workflow

on:
  push:
    branches: 
      - CI-CD-P10
  pull_request:
    branches: 
      - CI-CD-P10

jobs:
  Frontend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: front

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4 
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run üöÄ npm install 
        run: npm install 

      - name: Run ‚úàÔ∏è npm test
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage

     
      - name: Upload Coverage report
        uses: actions/upload-artifact@v4
        with:
          name: karma-report 
          path: front/coverage/lcov-report/

  SonarCloudFrontEnd:
    runs-on: ubuntu-latest
    needs: Frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

     
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: karma-report 
          path: front/coverage/lcov-report/

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: npm install
        working-directory: front

      - name: Build Angular project
        run: npm run build -- --configuration production --base-href="./"
        working-directory: front

      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
        with:
          projectBaseDir: front
          sonar.javascript.lcov.reportPaths: front/coverage/lcov-report/lcov.info 

  DockerLogAndBuild:
    runs-on: ubuntu-latest
    needs : SonarCloudFrontEnd
    defaults:
      run:
        working-directory: ${{ github.workspace }}/front

    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t bobapp-front .
          docker tag bobapp-front ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
