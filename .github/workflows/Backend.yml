name: Backend Workflow

on:
  push:
    branches:
      - feature/workflow
    paths:
      - 'back/**'


  pull_request:
    branches:
      - main
    paths:
      - 'back/**'


jobs:
  Build_Test_Coverage_Analyse:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run tests and generate JaCoCo coverage report
      run: mvn -B clean test

    - uses: actions/upload-artifact@v4
      with:
        name: coverage_backend
        path: ${{ github.workspace }}/back/target/site/jacoco

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar


    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=mydmoov_sonarcloud-p10-back -f pom.xml
      working-directory: back


  DockerLogAndBuild:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    needs: Build_Test_Coverage_Analyse
    defaults:
      run:
        working-directory: ${{ github.workspace }}/back

    steps:
      - uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
           path: /tmp/.docker-cache
           key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
           restore-keys: |
             ${{ runner.os }}-docker-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push backend Docker image
        run: |
          docker build -t bobapp-back .
          docker tag bobapp-back ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
